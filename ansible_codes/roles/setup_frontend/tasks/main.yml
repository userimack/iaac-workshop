---
# tasks file for setup_frontend
# - name: populate /etc/environment
#   lineinfile:
#     path: "/etc/environment"
#     state: present
#     regexp: "^{{ item.key }}="
#     line: "{{ item.key }}={{ item.value}}"
#   with_items: "{{ os_environment }}"

- name: Node.js - Install NPM packages
  npm: name={{ item }} state=present global=yes
  with_items: "{{ npm_packages }}"

- name: Clean app dir
  file:
    path: "{{ app_dir }}"
    state: absent

- name: Clone repo
  git:
    repo: "{{ frontend_app_git_url }}"
    dest: "{{ app_dir }}"
    force: yes
    depth: 1

- name: Backend Server Information
  template:
    src: environment.prod.ts.j2
    dest: "{{ app_dir }}/src/environments/environment.prod.ts"

- name: Install packages based on package.json.
  shell:
    cmd: npm install
    chdir: "{{ app_dir }}"
  register: npm_finished

- name: Build Package
  shell:
    cmd: ng build --prod --base-href=/ --deploy-url=/
    chdir: "{{ app_dir }}"
  when: npm_finished.changed

- name: Install nginx
  apt:
    name: nginx
    state: latest

- name: ensure nginx is at the latest version
  apt: name=nginx state=latest
  become: yes

- name: start nginx
  service:
      name: nginx
      state: started

- name: Create project directory in nginx root
  file:
    path: /usr/share/nginx/html/petclinic
    state: directory

- name: Copy dist directory
  copy:
    src: "{{ app_dir }}/dist"
    dest: "/usr/share/nginx/html/petclinic"
    remote_src: yes

- name: copy the nginx config file and restart nginx
  copy:
    src: nginx.cfg
    dest: /etc/nginx/sites-available/static_site.cfg
  become: yes

- name: create symlink
  file:
    src: /etc/nginx/sites-available/static_site.cfg
    dest: /etc/nginx/sites-enabled/default
    state: link
  become: yes

- name: restart nginx
  service:
    name: nginx
    state: restarted
  become: yes
